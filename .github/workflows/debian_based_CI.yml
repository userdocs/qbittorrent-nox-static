name: Debian Based CI
on:
  push:
    paths:
      - "qbittorrent-nox-static.sh"
  pull_request:
  workflow_dispatch:
    inputs:
      distinct_id:
      skip_rerun:
        description: "Skip rerun?"
        required: true
        type: boolean
      retries:
        description: 'Number of rerun retries'
        required: true
        default: '5'
        type: choice
        options: [ "1", "2", "3", "4", "5", "6", "7", "8", "9" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        container_id: [debian, ubuntu]
        container_codename: [bullseye, focal, jammy]
        build_tool: ["qmake", "cmake"]
        libtorrent_version: ["1.2", "2.0"]
        exclude:
          - container_id: debian
            container_codename: focal
          - container_id: debian
            container_codename: jammy
          - container_id: ubuntu
            container_codename: bullseye
        include:
          - build_tool: "qmake"
            qbt_qt_version: "5"
          - build_tool: "cmake"
            qbt_qt_version: "6"

    name: "${{ matrix.container_id }}-${{ matrix.container_codename }}-${{ matrix.libtorrent_version }}-qt-${{ matrix.qbt_qt_version }}-${{ matrix.build_tool }}"
    env:
      build_dir: "qbt-build"
      artifact_name: "${{ matrix.container_id }}-${{ matrix.container_codename }}-${{ matrix.libtorrent_version }}-qt-${{ matrix.qbt_qt_version }}-${{ matrix.build_tool }}-nox"
    container:
      image: ${{ matrix.container_id }}:${{ matrix.container_codename }}
      env:
        LANG: en_GB.UTF-8
        DEBIAN_FRONTEND: noninteractive
        TZ: Europe/London
        qbt_libtorrent_version: ${{ matrix.libtorrent_version }}
        qbt_qt_version: ${{ matrix.qbt_qt_version }}
        qbt_build_tool: ${{ matrix.build_tool }}
        qbt_workflow_files: yes
    steps:
      - uses: actions/checkout@v3

      - name: Host - update
        run: apt-get update

      - name: Host - upgrade
        run: apt-get -y upgrade

      - name: bionic - apt-get install gcc-8-base g++-8
        if: matrix.build_tool == 'cmake' && matrix.container_codename == 'bionic'
        run: |
          apt-get install -y gcc-8 g++-8
          printf '%s\n' "CC=gcc-8" >> $GITHUB_ENV
          printf '%s\n' "AR=gcc-ar-8" >> $GITHUB_ENV
          printf '%s\n' "CXX=g++-8" >> $GITHUB_ENV

      - run: bash qbittorrent-nox-static.sh -bs-a
      - run: bash qbittorrent-nox-static.sh glibc
      - run: bash qbittorrent-nox-static.sh zlib
      - run: bash qbittorrent-nox-static.sh iconv
      - run: bash qbittorrent-nox-static.sh icu
      - run: bash qbittorrent-nox-static.sh openssl
      - run: bash qbittorrent-nox-static.sh boost
      - run: bash qbittorrent-nox-static.sh libtorrent
      - run: bash qbittorrent-nox-static.sh double_conversion
        if: matrix.build_tool == 'cmake'
      - run: bash qbittorrent-nox-static.sh qtbase
      - run: bash qbittorrent-nox-static.sh qttools
      - run: bash qbittorrent-nox-static.sh qbittorrent

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: ${{ env.build_dir }}/completed/qbittorrent-nox

  rerun-on-failure:
    if: failure() && inputs.skip_rerun == '0'
    name: rerun-on-failure
    needs: build
    permissions:
      actions: write
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - uses: actions/checkout@v3
      - name: Trigger rerun workflow on job failures
        run: gh workflow run rerun.yml -f run_id=${{ github.run_id }} -f attempts=${{ github.run_attempt }} -f retries=${{ inputs.retries }}
