name: ci - alpine-release

on:
  workflow_call:
    inputs:
      distinct_id:
        description: "Distinct ID for the artifacts"
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        qbt_libtorrent_version: ["1.2", "2.0"]
        include:
          - qbt_libtorrent_version: "1.2"
            preview_release: true

          - qbt_libtorrent_version: "2.0"
            preview_release: false

    name: "Publish release libtorrent-v${{ matrix.qbt_libtorrent_version }}"

    env:
      qbt_build_dir: "qbt-build"

    steps:
      - name: Checkout ${{ inputs.distinct_id }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Pandoc - Bootstrap
        run: |
          pandoc_git_tag="$(git ls-remote -q -t --refs https://github.com/jgm/pandoc.git | awk '/tags\/[0-9]/{sub("refs/tags/", ""); print $2 }' | awk '!/^$/' | sort -rV | head -n 1)"
          curl -sLo- "https://github.com/jgm/pandoc/releases/latest/download/pandoc-${pandoc_git_tag}-linux-$(dpkg --print-architecture).tar.gz" | tar xzf - --strip-components 2 -C "$(pwd)" --exclude="share"

      - name: Host - Download 1.2 qbittorrent-nox artifacts ${{ inputs.distinct_id }}
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          path: "1.2"
          pattern: libtorrent-v1.2-*-qbittorrent-nox
          merge-multiple: true

      - name: Host - Download 2.0 qbittorrent-nox artifacts ${{ inputs.distinct_id }}
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          path: "2.0"
          pattern: libtorrent-v2.0-*-qbittorrent-nox
          merge-multiple: true

      - name: Host - merge release-info ${{ inputs.distinct_id }}
        env:
          lt_version: ${{ matrix.qbt_libtorrent_version }}
        run: |
          shopt -s nullglob

          revision="$(jq -r .revision "${lt_version}"/*-dependency-version.json | sort -nr | head -n1)"
          boost="$(jq -r .boost "${lt_version}"/*-dependency-version.json | head -n1)"

          # this need to check both 1.2 and 2.0 folders to merge the libtorrent versions in the dependency-version.json
          for dependency_version_json in {1.2,2.0}/*-dependency-version.json; do
            if [[ -f ${dependency_version_json} ]]; then
              sed -r 's/"boost": (.*)/BOOST_PLACEHOLDER/g' -i "${dependency_version_json}"
              sed -r 's/"revision": (.*)/REVISION_PLACEHOLDER/g' -i "${dependency_version_json}"
              dependency_version+=("${dependency_version_json}")
            fi
          done

          # This file only needs to merge info specific to the libtorrent matrix running it.
          for release_md in "${lt_version}"/*-release.md; do
            if [[ -f ${release_md} ]]; then
              sed -r 's/^\|(.*)revision(.*)\|(.*)\|$/REVISION_PLACEHOLDER/g' -i "${release_md}"
              release_md+=("${release_md}")
            fi
          done

          readarray -t release_sorted < <(printf '%s\n' "${release_md[@]}" | sort)
          readarray -t dependency_version_sorted < <(printf '%s\n' "${dependency_version[@]}" | sort)

          paste -d '\n' "${release_sorted[@]}" | uniq | awk '!(NF && seen[$0]++) || /^>/' > "tmp-release.md"
          paste -d '\n' "${dependency_version_sorted[@]}" | uniq | awk '!(NF && seen[$0]++)' > "dependency-version.json"

          sed -i "s|BOOST_PLACEHOLDER|\"boost\": \"${boost}\",|" dependency-version.json
          sed -i "s|REVISION_PLACEHOLDER|\"revision\": \"${revision}\"|" dependency-version.json
          sed -i "s/REVISION_PLACEHOLDER/| revision |${revision} |/" tmp-release.md

          ./pandoc --wrap=preserve -f gfm tmp-release.md -t gfm -o release.md

      - name: Host - Bootstrap release tag ${{ inputs.distinct_id }}
        run: printf '%s\n' "release_tag=$(cat ${{ matrix.qbt_libtorrent_version }}/tag.md)" >> $GITHUB_ENV

      - name: Host - Bootstrap release title ${{ inputs.distinct_id }}
        run: printf '%s\n' "release_title=$(cat ${{ matrix.qbt_libtorrent_version }}/title.md)" >> $GITHUB_ENV

      - name: Host- Create release - tag - assets ${{ inputs.distinct_id }}
        uses: ncipollo/release-action@1c89adf39833729d8f85a31ccbc451b078733c80 # v1.19.1
        with:
          prerelease: "${{ matrix.preview_release }}"
          artifacts: "${{ matrix.qbt_libtorrent_version }}/*-qbittorrent-nox,dependency-version.json"
          replacesArtifacts: true
          tag: "${{ env.release_tag }}"
          name: "${{ env.release_title }}"
          bodyFile: "release.md"
          allowUpdates: true
          token: "${{ github.TOKEN }}"
